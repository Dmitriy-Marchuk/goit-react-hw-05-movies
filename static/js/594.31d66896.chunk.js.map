{"version":3,"file":"static/js/594.31d66896.chunk.js","mappings":"wMAoCA,EA9BqB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OAChBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,eAAIC,UAAU,YAAd,SACGH,GACCA,EAAOI,KAAI,SAAAC,GAAK,eACd,eAAIF,UAAU,YAAd,UACE,UAAC,KAAD,CAASG,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMR,GAAnD,WACE,gBACEE,UAAU,aACVO,IAAG,UAAEL,EAAMM,YAAR,QAAgBN,EAAMO,MACzBC,IACER,EAAMS,YAAN,0CACuCT,EAAMS,aAjB/D,+FAqBc,gBAAKX,UAAU,aAAf,UACE,eAAIA,UAAU,aAAd,mBAA4BE,EAAMM,YAAlC,QAA0CN,EAAMO,cAZvBP,EAAME,GADvB,OAqBzB,C,kICQD,EArCkB,SAAC,GAAkB,IAAhBQ,EAAe,EAAfA,SACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAgBA,OACE,0BACE,kBAAMf,UAAU,aAAaY,SAZZ,SAAAI,GAGnB,GAFAA,EAAEC,iBAEmB,KAAjBH,EAAMI,OACR,OAAOC,EAAAA,GAAAA,MAAA,mCAETP,EAASE,GACTC,EAAS,GACV,EAIG,WACE,kBACEf,UAAU,cACVoB,SAnBY,SAAAJ,GAClBD,EAASC,EAAEK,OAAOC,MACnB,EAkBOA,MAAOR,EACPS,KAAK,OACLC,YAAY,gBACZC,aAAa,MACbC,WAAS,KAEX,mBAAQ1B,UAAU,eAAeuB,KAAK,SAAtC,UACE,SAAC,MAAD,CAAUI,KAAM,WAKzB,E,oBCXD,EAvBe,WAAO,IAAD,EACnB,GAAsCd,EAAAA,EAAAA,UAAS,IAA/C,eAAOe,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAahD,OAPAC,EAAAA,EAAAA,YAAU,WAC0B,OAA9BJ,EAAaG,IAAI,UACnBE,EAAAA,EAAmBH,GAAYI,MAAK,SAAAC,GAAI,OAAIT,EAAeS,EAAKC,QAAxB,IAE1CV,EAAe,GAChB,GAAE,CAACE,EAAcE,KAGhB,iCACE,SAAC,EAAD,CAAWA,WAAYA,EAAYrB,SAbtB,SAAAE,GACfkB,EAA0B,KAAVlB,EAAe,CAAEA,MAAOA,GAAU,CAAC,EACpD,IAYIc,IAAe,SAACY,EAAA,EAAD,CAAc3C,OAAQ+B,MAG3C,C","sources":["components/MovieGallery/MovieGallery.js","components/SearchBar/SearchBar.js","components/Movies/Movies.js"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\nimport './_movieGallery.scss';\n\nconst imageNotFound =\n  'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg?20200913095930';\n\nconst MovieGallery = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul className=\"movieList\">\n        {movies &&\n          movies.map(movie => (\n            <li className=\"movieItem\" key={movie.id}>\n              <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                <img\n                  className=\"movieImage\"\n                  alt={movie.name ?? movie.title}\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                      : imageNotFound\n                  }\n                />\n                <div className=\"movieThumb\">\n                  <h2 className=\"movieTitle\">{movie.name ?? movie.title}</h2>\n                </div>\n              </NavLink>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default MovieGallery;\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { BsSearch } from 'react-icons/bs';\nimport './_searchBar.scss';\n\nconst SearchBar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleInput = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      return toast.error(`Wrong request! Write something!`);\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <div>\n      <form className=\"searchForm\" onSubmit={handleSubmit}>\n        <input\n          className=\"searchInput\"\n          onChange={handleInput}\n          value={query}\n          type=\"text\"\n          placeholder=\"Search movies\"\n          autoComplete=\"off\"\n          autoFocus\n        ></input>\n        <button className=\"searchButton\" type=\"submit\">\n          <BsSearch size={18} />\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport * as API from '../../services/api';\nimport MovieGallery from 'components/MovieGallery/MovieGallery';\n\nconst Movies = () => {\n  const [moviesFound, setMoviesFound] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryParam = searchParams.get('query') ?? '';\n\n  const onSubmit = query => {\n    setSearchParams(query !== '' ? { query: query } : {});\n  };\n\n  useEffect(() => {\n    if (searchParams.get('query') !== null) {\n      API.getMovieSearch(queryParam).then(data => setMoviesFound(data.results));\n    }\n    setMoviesFound([]);\n  }, [searchParams, queryParam]);\n\n  return (\n    <>\n      <SearchBar queryParam={queryParam} onSubmit={onSubmit} />\n      {moviesFound && <MovieGallery movies={moviesFound} />}\n    </>\n  );\n};\nexport default Movies;\n"],"names":["movies","location","useLocation","className","map","movie","to","id","state","from","alt","name","title","src","poster_path","onSubmit","useState","query","setQuery","e","preventDefault","trim","toast","onChange","target","value","type","placeholder","autoComplete","autoFocus","size","moviesFound","setMoviesFound","useSearchParams","searchParams","setSearchParams","queryParam","get","useEffect","API","then","data","results","MovieGallery"],"sourceRoot":""}